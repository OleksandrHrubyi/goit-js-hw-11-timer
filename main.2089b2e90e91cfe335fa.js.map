{"version":3,"sources":["webpack:///./js/functions.js","webpack:///./index.js","webpack:///./js/template.js"],"names":["pad","value","String","padStart","constructor","selector","targetDate","day","houre","minute","secs","this","timerCounter","valueDays","document","querySelector","valueHours","valueMinutes","valueSeconds","updateClock","days","hours","mins","textContent","setInterval","currentTime","Date","now","time","Math","floor","getTimerComponents"],"mappings":"mIACO,MAAMA,EAAM,SAAUC,GACzB,OAAOC,OAAOD,GAAOE,SAAS,EAAG,MCErB,ICDD,MACXC,aAAY,SAAEC,EAAF,WAAYC,EAAZ,IAAwBC,EAAxB,MAA6BC,EAA7B,OAAoCC,EAApC,KAA4CC,IAEpDC,KAAKN,SAAWA,EAChBM,KAAKL,WAAaA,EAClBK,KAAKJ,IAAMA,EACXI,KAAKH,MAAQA,EACbG,KAAKF,OAASA,EACdE,KAAKD,KAAOA,EACZC,KAAKC,eAGLD,KAAKE,UAAYC,SAASC,cAAiBV,EAAF,wBACzCM,KAAKK,WAAaF,SAASC,cAAiBV,EAAF,yBAC1CM,KAAKM,aAAeH,SAASC,cAAiBV,EAAF,wBAC5CM,KAAKO,aAAeJ,SAASC,cAAiBV,EAAF,wBAKhDc,aAAY,KAAEC,EAAF,MAAQC,EAAR,KAAeC,EAAf,KAAqBZ,IAEjCC,KAAKE,UAAUU,YAAe,GAAEH,EAChCT,KAAKK,WAAWO,YAAe,GAAEF,EACjCV,KAAKM,aAAaM,YAAe,GAAED,EACnCX,KAAKO,aAAaK,YAAe,GAAEb,EAInCE,eAEIY,YAAY,KACR,MAAMC,EAAcC,KAAKC,MAEnBC,EFhCgB,SAAUA,GAMxC,MAAO,CAAER,KALIpB,EAAI6B,KAAKC,MAAMF,EAAO,QAKpBP,MAJDrB,EAAI6B,KAAKC,MAAOF,EAAO,MAAR,OAIPN,KAHTtB,EAAI6B,KAAKC,MAAOF,EAAO,KAAR,MAGAlB,KAFfV,EAAI6B,KAAKC,MAAOF,EAAO,IAAe,OE4B9BG,CADIpB,KAAKL,WAAamB,GAEnCd,KAAKQ,YAAYS,IAClB,ODnCwB,CAC/BvB,SAAU,WACVC,WAAY,IAAIoB,KAAK,oB","file":"main.2089b2e90e91cfe335fa.js","sourcesContent":["\nexport const pad = function (value) {\n    return String(value).padStart(2, '0');\n};\n\nexport const getTimerComponents = function (time) {\n    const days = pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\n    \n    return { days, hours, mins, secs };\n};\n\n","import './styles.css';\nimport CountdownTimer from './js/template';\n\n\nconst timerId = new CountdownTimer({\n    selector: '#timer-1',\n    targetDate: new Date('Jan 30, 2021'),\n   });\n\n\n\n\n","import { getTimerComponents } from './functions';\n\n\nexport default class CountdownTimer {\n    constructor({ selector, targetDate, day, houre, minute, secs }) {\n\n        this.selector = selector;\n        this.targetDate = targetDate;\n        this.day = day;\n        this.houre = houre;\n        this.minute = minute;\n        this.secs = secs;\n        this.timerCounter();\n        \n\n        this.valueDays = document.querySelector(`${selector} [data-value=\"days\"]`);\n        this.valueHours = document.querySelector(`${selector} [data-value=\"hours\"]`);\n        this.valueMinutes = document.querySelector(`${selector} [data-value=\"mins\"]`);\n        this.valueSeconds = document.querySelector(`${selector} [data-value=\"secs\"]`);\n       \n    }\n\n\n    updateClock({ days, hours, mins, secs }) {\n         \n    this.valueDays.textContent = `${days}`;\n    this.valueHours.textContent = `${hours}`;\n    this.valueMinutes.textContent = `${mins}`;\n    this.valueSeconds.textContent = `${secs}`;\n    };\n\n    \n    timerCounter()\n    {\n        setInterval(() => {\n            const currentTime = Date.now();\n            const timeLeft = this.targetDate - currentTime;\n            const time = getTimerComponents(timeLeft);\n            this.updateClock(time);            \n        }, 1000)\n    };\n    \n};\n\n\n\n\n\n"],"sourceRoot":""}